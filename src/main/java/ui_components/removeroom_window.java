/*
Jakub Wawak
kubawawak@gmail.com
all rights reseved
 */
package ui_components;

import com.jakubwawak.track.connector.Connector;
import com.jakubwawak.track.connector.Room_Connector;
import com.mashape.unirest.http.exceptions.UnirestException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.ImageIcon;
import maintenence.Parser;
import user_interface.message_window;

/**
 *Object for creating window for removing items
 * @author jakubwawak
 */
public class removeroom_window extends javax.swing.JDialog {

    Connector connector;
    int room_id;
    /**
     * Creates new form removeroom_window
     */
    public removeroom_window(java.awt.Frame parent, boolean modal,Connector connector,int room_id) {
        super(parent, modal);
        this.connector = connector;
        this.room_id = room_id;
        initComponents();
        this.setLocationRelativeTo(null);
        load_window_icon();
        setVisible(true);
    }

    /**
     * Function for loading window icon
     */
    void load_window_icon(){
        try{
            ImageIcon img = new ImageIcon("track_icon.png");
            this.setIconImage(img.getImage());
        }catch(Exception e){
            e.printStackTrace();
        }
    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        field_password = new javax.swing.JPasswordField();
        button_remove = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Room removed");

        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("Room password:");

        button_remove.setText("Remove");
        button_remove.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                button_removeActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, 291, Short.MAX_VALUE)
                    .addComponent(field_password)
                    .addComponent(button_remove, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(11, 11, 11)
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(field_password, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(button_remove)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void button_removeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_button_removeActionPerformed
        Room_Connector rc = new Room_Connector(connector);
        String room_password = new String(field_password.getPassword());
        if ( !room_password.isEmpty() ){
            try {
                Parser parser = new Parser(rc.remove_room(room_id, room_password, this));
                if ( parser.get_int("flag") == 1 ){
                    new message_window(this,true,"Room removed","");
                    dispose();
                }
                else if (parser.get_int("flag") == 2 ){
                    new message_window(this,true,"You cannot remove room.\nNot an admin","");
                }
                else if (parser.get_int("flag") == 3 ){
                    new message_window(this,true,"Wrong room password!","");
                }
            } catch (UnirestException ex) {
                new message_window(this,true,"Error\n"+ex.toString(),"ERROR");
            }
        }
        else{
            new message_window(this,true,"Password field is empty","");
        }
        
    }//GEN-LAST:event_button_removeActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton button_remove;
    private javax.swing.JPasswordField field_password;
    private javax.swing.JLabel jLabel1;
    // End of variables declaration//GEN-END:variables
}
