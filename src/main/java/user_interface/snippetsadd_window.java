/*
Jakub Wawak
kubawawak@gmail.com
all rights reseved
 */
package user_interface;

import com.jakubwawak.track.connector.Connector;
import com.jakubwawak.track.connector.Snippet_Connector;
import com.mashape.unirest.http.exceptions.UnirestException;
import java.util.Date;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.ImageIcon;
import maintenence.Parser;

/**
 *Window for adding snippets
 * @author jakubwawak
 */
public class snippetsadd_window extends javax.swing.JDialog {

    /**
     * Creates new form snippetsadd_window
     */
    Connector connector;
    int mode;
    int content_counter,title_counter;
    public snippetsadd_window(java.awt.Frame parent, boolean modal,Connector connector, int mode) {
        super(parent, modal);
        this.connector = connector;
        this.mode = mode;
        content_counter = 0;
        title_counter = 0;
        initComponents();
        load_window();
        this.setLocationRelativeTo(null);
        setVisible(true);
    }
    
    /**
     * Function for loading window icon
     */
    void load_window_icon(){
        try{
            ImageIcon img = new ImageIcon("track_icon.png");
            this.setIconImage(img.getImage());
        }catch(Exception e){
            e.printStackTrace();
        }
    }
    
    /**
     * Function for loading window
     */
    void load_window(){
        load_window_icon();
        Date actual_date = new Date();
        
        if ( mode == 0 ){
            label_date.setText("Time: "+actual_date.toString());
        }
        else{
            // option for loading data snippet when updating
        }
    }
    
    /**
     * Function for validating fields
     * @return boolean
     */
    boolean validate_fields(){
        String message = "";
        String title = field_title.getText();
        String content = field_content.getText();
        if ( title.length() > 40 ){
            message = message + "Title is too long. Max 40 now "+title.length()+"\n";
        }
        if ( content.length() >250 ){
            message = message + "Content is too long. Max 250 now "+content.length()+"\n";
        }
        
        if ( message.equals("") ){
            return true;
        }
        else{
            new message_window(this,true,message,"Validation error");
            return false;
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        field_title = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        label_date = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        field_content = new javax.swing.JTextArea();
        button_save = new javax.swing.JButton();
        jMenuBar1 = new javax.swing.JMenuBar();
        menu_info = new javax.swing.JMenu();
        menu_aboutsnippets = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Create snippet");

        jLabel1.setText("Title:");

        field_title.setText("My snippet");
        field_title.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                field_titleFocusGained(evt);
            }
        });
        field_title.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                field_titleKeyPressed(evt);
            }
        });

        jLabel2.setText("Content:");

        label_date.setText("Date:");

        field_content.setColumns(20);
        field_content.setRows(5);
        field_content.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                field_contentKeyPressed(evt);
            }
        });
        jScrollPane1.setViewportView(field_content);

        button_save.setText("Save");
        button_save.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                button_saveActionPerformed(evt);
            }
        });

        menu_info.setText("Info");

        menu_aboutsnippets.setText("About snippets");
        menu_aboutsnippets.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                menu_aboutsnippetsActionPerformed(evt);
            }
        });
        menu_info.add(menu_aboutsnippets);

        jMenuBar1.add(menu_info);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(label_date, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(field_title))
                    .addComponent(button_save, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 319, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(125, 125, 125)
                        .addComponent(jLabel2)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(7, 7, 7)
                .addComponent(label_date)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(field_title, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel2)
                .addGap(4, 4, 4)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 265, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(button_save)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void field_contentKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_field_contentKeyPressed
        content_counter = field_content.getText().length();
        field_content.setToolTipText("Character counter: "+content_counter);
    }//GEN-LAST:event_field_contentKeyPressed

    private void field_titleKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_field_titleKeyPressed
        title_counter = field_title.getText().length();
        field_title.setToolTipText("Character counter: "+title_counter);
    }//GEN-LAST:event_field_titleKeyPressed

    private void menu_aboutsnippetsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_menu_aboutsnippetsActionPerformed
        String message = "Max title size: 40 characters,\nmax content size: 250";
        new message_window(this,true,message,"About snippets");
    }//GEN-LAST:event_menu_aboutsnippetsActionPerformed

    private void field_titleFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_field_titleFocusGained
        if ( field_title.getText().equals("My Snippet") ){
            field_title.setText("");
        }
    }//GEN-LAST:event_field_titleFocusGained

    private void button_saveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_button_saveActionPerformed
        if ( validate_fields() ){
            Snippet_Connector sc = new Snippet_Connector(connector);
            try {
                Parser parser = new Parser(sc.add_snippets(field_title.getText(), field_content.getText(), this));
                if ( parser.get_int("flag") == 1){
                    new message_window(this,true,"Snippet add","");
                    dispose();
                }
                else{
                    new message_window(this,true,"Failed to add snippet","");
                }
            } catch (UnirestException ex) {
                new message_window(this,true,"ERROR\n"+ex.toString(),"ERROR");
            }
        }
    }//GEN-LAST:event_button_saveActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton button_save;
    private javax.swing.JTextArea field_content;
    private javax.swing.JTextField field_title;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel label_date;
    private javax.swing.JMenuItem menu_aboutsnippets;
    private javax.swing.JMenu menu_info;
    // End of variables declaration//GEN-END:variables
}
